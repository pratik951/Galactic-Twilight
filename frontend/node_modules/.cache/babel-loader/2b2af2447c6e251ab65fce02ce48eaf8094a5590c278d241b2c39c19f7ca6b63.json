{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Desktop\\\\NASA\\\\frontend\\\\src\\\\Starfield.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Starfield() {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let w = window.innerWidth,\n      h = window.innerHeight;\n    canvas.width = w;\n    canvas.height = h;\n    let stars = Array.from({\n      length: 120\n    }, () => ({\n      x: Math.random() * w,\n      y: Math.random() * h,\n      r: Math.random() * 1.2 + 0.2,\n      d: Math.random() * 0.5 + 0.2\n    }));\n    function draw() {\n      ctx.clearRect(0, 0, w, h);\n      for (let s of stars) {\n        ctx.beginPath();\n        ctx.arc(s.x, s.y, s.r, 0, 2 * Math.PI);\n        ctx.fillStyle = 'rgba(255,255,255,0.8)';\n        ctx.shadowColor = '#fff';\n        ctx.shadowBlur = 8;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        s.x += s.d;\n        if (s.x > w) s.x = 0;\n      }\n      requestAnimationFrame(draw);\n    }\n    draw();\n    const handleResize = () => {\n      w = window.innerWidth;\n      h = window.innerHeight;\n      canvas.width = w;\n      canvas.height = h;\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: 0,\n      pointerEvents: 'none'\n    },\n    \"aria-hidden\": \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(Starfield, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Starfield;\nvar _c;\n$RefreshReg$(_c, \"Starfield\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Starfield","_s","canvasRef","canvas","current","ctx","getContext","w","window","innerWidth","h","innerHeight","width","height","stars","Array","from","length","x","Math","random","y","r","d","draw","clearRect","s","beginPath","arc","PI","fillStyle","shadowColor","shadowBlur","fill","requestAnimationFrame","handleResize","addEventListener","removeEventListener","ref","style","position","top","left","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prati/Desktop/NASA/frontend/src/Starfield.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nexport default function Starfield() {\r\n  const canvasRef = useRef();\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let w = window.innerWidth, h = window.innerHeight;\r\n    canvas.width = w; canvas.height = h;\r\n    let stars = Array.from({ length: 120 }, () => ({\r\n      x: Math.random() * w,\r\n      y: Math.random() * h,\r\n      r: Math.random() * 1.2 + 0.2,\r\n      d: Math.random() * 0.5 + 0.2\r\n    }));\r\n    function draw() {\r\n      ctx.clearRect(0, 0, w, h);\r\n      for (let s of stars) {\r\n        ctx.beginPath();\r\n        ctx.arc(s.x, s.y, s.r, 0, 2 * Math.PI);\r\n        ctx.fillStyle = 'rgba(255,255,255,0.8)';\r\n        ctx.shadowColor = '#fff';\r\n        ctx.shadowBlur = 8;\r\n        ctx.fill();\r\n        ctx.shadowBlur = 0;\r\n        s.x += s.d; if (s.x > w) s.x = 0;\r\n      }\r\n      requestAnimationFrame(draw);\r\n    }\r\n    draw();\r\n    const handleResize = () => {\r\n      w = window.innerWidth; h = window.innerHeight;\r\n      canvas.width = w; canvas.height = h;\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  return <canvas ref={canvasRef} style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', zIndex: 0, pointerEvents: 'none' }} aria-hidden=\"true\" />;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}