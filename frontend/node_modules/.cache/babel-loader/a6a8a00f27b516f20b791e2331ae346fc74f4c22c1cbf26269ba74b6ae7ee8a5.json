{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Desktop\\\\NASA\\\\frontend\\\\src\\\\SolarSystemExplorer.js\";\nimport React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Stars } from '@react-three/drei';\n\n// Simple planet component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Planet({\n  position,\n  color,\n  size,\n  name,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    onClick: () => onClick(name),\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [size, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Planet;\nconst PLANETS = [{\n  name: 'Mercury',\n  color: '#b1b1b1',\n  size: 0.4,\n  pos: [2, 0, 0]\n}, {\n  name: 'Venus',\n  color: '#e6c97b',\n  size: 0.7,\n  pos: [4, 0, 0]\n}, {\n  name: 'Earth',\n  color: '#3a7bd5',\n  size: 0.75,\n  pos: [6, 0, 0]\n}, {\n  name: 'Mars',\n  color: '#c1440e',\n  size: 0.6,\n  pos: [8, 0, 0]\n}, {\n  name: 'Jupiter',\n  color: '#e3c07b',\n  size: 1.2,\n  pos: [11, 0, 0]\n}, {\n  name: 'Saturn',\n  color: '#e8d8b9',\n  size: 1.1,\n  pos: [14, 0, 0]\n}, {\n  name: 'Uranus',\n  color: '#b5e3e3',\n  size: 0.9,\n  pos: [17, 0, 0]\n}, {\n  name: 'Neptune',\n  color: '#4062bb',\n  size: 0.9,\n  pos: [20, 0, 0]\n}];\nexport default function SolarSystemExplorer({\n  onPlanetSelect\n}) {\n  const handlePlanetClick = planet => {\n    if (onPlanetSelect) onPlanetSelect(planet);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      width: '100%',\n      background: 'black',\n      borderRadius: '16px',\n      margin: '2rem 0'\n    },\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Loading 3D Solar System...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        camera: {\n          position: [0, 5, 25],\n          fov: 60\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [0, 0, 0],\n          intensity: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stars, {\n          radius: 100,\n          depth: 50,\n          count: 5000,\n          factor: 4,\n          fade: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          position: [0, 0, 0],\n          children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n            args: [1.5, 32, 32]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n            emissive: '#fff700',\n            color: '#fff700',\n            emissiveIntensity: 1.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), PLANETS.map(p => /*#__PURE__*/_jsxDEV(Planet, {\n          position: p.pos,\n          color: p.color,\n          size: p.size,\n          name: p.name,\n          onClick: handlePlanetClick\n        }, p.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {\n          enablePan: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c2 = SolarSystemExplorer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Planet\");\n$RefreshReg$(_c2, \"SolarSystemExplorer\");","map":{"version":3,"names":["React","Suspense","Canvas","OrbitControls","Stars","jsxDEV","_jsxDEV","Planet","position","color","size","name","onClick","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","PLANETS","pos","SolarSystemExplorer","onPlanetSelect","handlePlanetClick","planet","style","height","width","background","borderRadius","margin","fallback","camera","fov","intensity","radius","depth","count","factor","fade","emissive","emissiveIntensity","map","p","enablePan","_c2","$RefreshReg$"],"sources":["C:/Users/prati/Desktop/NASA/frontend/src/SolarSystemExplorer.js"],"sourcesContent":["import React, { Suspense } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Stars } from '@react-three/drei';\r\n\r\n// Simple planet component\r\nfunction Planet({ position, color, size, name, onClick }) {\r\n  return (\r\n    <mesh position={position} onClick={() => onClick(name)}>\r\n      <sphereGeometry args={[size, 32, 32]} />\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nconst PLANETS = [\r\n  { name: 'Mercury', color: '#b1b1b1', size: 0.4, pos: [2, 0, 0] },\r\n  { name: 'Venus', color: '#e6c97b', size: 0.7, pos: [4, 0, 0] },\r\n  { name: 'Earth', color: '#3a7bd5', size: 0.75, pos: [6, 0, 0] },\r\n  { name: 'Mars', color: '#c1440e', size: 0.6, pos: [8, 0, 0] },\r\n  { name: 'Jupiter', color: '#e3c07b', size: 1.2, pos: [11, 0, 0] },\r\n  { name: 'Saturn', color: '#e8d8b9', size: 1.1, pos: [14, 0, 0] },\r\n  { name: 'Uranus', color: '#b5e3e3', size: 0.9, pos: [17, 0, 0] },\r\n  { name: 'Neptune', color: '#4062bb', size: 0.9, pos: [20, 0, 0] },\r\n];\r\n\r\nexport default function SolarSystemExplorer({ onPlanetSelect }) {\r\n  const handlePlanetClick = (planet) => {\r\n    if (onPlanetSelect) onPlanetSelect(planet);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '500px', width: '100%', background: 'black', borderRadius: '16px', margin: '2rem 0' }}>\r\n      <Suspense fallback={<div style={{ color: 'white' }}>Loading 3D Solar System...</div>}>\r\n        <Canvas camera={{ position: [0, 5, 25], fov: 60 }}>\r\n          <ambientLight intensity={0.5} />\r\n          <pointLight position={[0, 0, 0]} intensity={2} />\r\n          <Stars radius={100} depth={50} count={5000} factor={4} fade />\r\n          {/* Sun */}\r\n          <mesh position={[0, 0, 0]}>\r\n            <sphereGeometry args={[1.5, 32, 32]} />\r\n            <meshStandardMaterial emissive={'#fff700'} color={'#fff700'} emissiveIntensity={1.5} />\r\n          </mesh>\r\n          {/* Planets */}\r\n          {PLANETS.map((p) => (\r\n            <Planet key={p.name} position={p.pos} color={p.color} size={p.size} name={p.name} onClick={handlePlanetClick} />\r\n          ))}\r\n          <OrbitControls enablePan={false} />\r\n        </Canvas>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}