{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\Desktop\\\\NASA\\\\frontend\\\\src\\\\AsteroidDefenseGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useUser } from './UserContext';\nimport './AsteroidDefenseGame.css';\nimport { useHighContrast } from './HighContrastContext';\n\n// Simple arcade-style asteroid defense game using real NEO data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GAME_DURATION = 60; // seconds\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// Voice narration for asteroid facts and game events\nfunction getVoicesAsync() {\n  return new Promise(resolve => {\n    const voices = window.speechSynthesis.getVoices();\n    if (voices.length) return resolve(voices);\n    window.speechSynthesis.onvoiceschanged = () => {\n      const loadedVoices = window.speechSynthesis.getVoices();\n      resolve(loadedVoices);\n    };\n  });\n}\nasync function speak(text, onFail, utterRef) {\n  if ('speechSynthesis' in window) {\n    try {\n      const voices = await getVoicesAsync();\n      if (!voices.length) {\n        if (onFail) onFail(true);\n        return;\n      }\n      const voice = voices.find(v => v.lang && v.lang.startsWith('en')) || voices[0];\n      const utter = new window.SpeechSynthesisUtterance(text);\n      if (voice) utter.voice = voice;\n      utter.rate = 1.25; // Set speech rate to 1.25x\n      utter.onerror = () => {\n        if (onFail) onFail(true);\n      };\n      utter.onstart = () => {\n        if (onFail) onFail(false);\n      };\n      if (utterRef) utterRef.current = utter;\n      window.speechSynthesis.speak(utter);\n      if (window.__loggedVoices !== true) {\n        console.log('Available voices:', voices);\n        window.__loggedVoices = true;\n      }\n    } catch (e) {\n      if (onFail) onFail(true);\n    }\n  } else {\n    if (onFail) onFail(true);\n  }\n}\nconst AsteroidDefenseGame = () => {\n  _s();\n  const {\n    awardBadge,\n    logAction\n  } = useUser();\n  const {\n    highContrast\n  } = useHighContrast();\n  const [asteroids, setAsteroids] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(GAME_DURATION);\n  const [showFact, setShowFact] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [factQueue, setFactQueue] = useState([]); // queue for facts\n  const [currentFact, setCurrentFact] = useState(null); // currently displayed fact\n  const [speechError, setSpeechError] = useState(false);\n  const [speechReady, setSpeechReady] = useState(false); // tracks if user has enabled speech\n  const intervalRef = useRef();\n  const utterRef = useRef(); // add this near other refs\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\n    fetch(`${backendUrl}/api/neo?start_date=2025-06-18&end_date=2025-06-18`).then(res => res.json()).then(data => {\n      const neos = Object.values(data.near_earth_objects || {}).flat();\n      setAsteroids(neos.slice(0, 10).map(neo => {\n        var _neo$estimated_diamet, _neo$estimated_diamet2, _neo$estimated_diamet3, _neo$close_approach_d, _neo$close_approach_d2, _neo$close_approach_d3, _neo$close_approach_d4, _neo$close_approach_d5, _neo$close_approach_d6, _neo$close_approach_d7, _neo$close_approach_d8;\n        // Creative fact generation\n        const diameter = (_neo$estimated_diamet = neo.estimated_diameter) === null || _neo$estimated_diamet === void 0 ? void 0 : (_neo$estimated_diamet2 = _neo$estimated_diamet.meters) === null || _neo$estimated_diamet2 === void 0 ? void 0 : (_neo$estimated_diamet3 = _neo$estimated_diamet2.estimated_diameter_max) === null || _neo$estimated_diamet3 === void 0 ? void 0 : _neo$estimated_diamet3.toFixed(1);\n        const miss = (_neo$close_approach_d = neo.close_approach_data) === null || _neo$close_approach_d === void 0 ? void 0 : (_neo$close_approach_d2 = _neo$close_approach_d[0]) === null || _neo$close_approach_d2 === void 0 ? void 0 : (_neo$close_approach_d3 = _neo$close_approach_d2.miss_distance) === null || _neo$close_approach_d3 === void 0 ? void 0 : (_neo$close_approach_d4 = _neo$close_approach_d3.kilometers) === null || _neo$close_approach_d4 === void 0 ? void 0 : _neo$close_approach_d4.split('.')[0];\n        const approach = ((_neo$close_approach_d5 = neo.close_approach_data) === null || _neo$close_approach_d5 === void 0 ? void 0 : (_neo$close_approach_d6 = _neo$close_approach_d5[0]) === null || _neo$close_approach_d6 === void 0 ? void 0 : _neo$close_approach_d6.close_approach_date_full) || ((_neo$close_approach_d7 = neo.close_approach_data) === null || _neo$close_approach_d7 === void 0 ? void 0 : (_neo$close_approach_d8 = _neo$close_approach_d7[0]) === null || _neo$close_approach_d8 === void 0 ? void 0 : _neo$close_approach_d8.close_approach_date);\n        const funFacts = [`Asteroid ${neo.name} zooms by Earth at a distance of ${miss ? miss + ' km' : 'unknown distance'}!`, `Did you know? ${neo.name} is about ${diameter ? diameter + ' meters' : 'unknown size'} wide!`, `Watch out! ${neo.name} made a close approach on ${approach || 'an unknown date'}!`, `Asteroid ${neo.name} is a true space traveler!`, `You just blasted ${neo.name}!`];\n        const factIdx = Math.floor(Math.random() * funFacts.length);\n        return {\n          ...neo,\n          x: getRandomInt(10, 90),\n          y: 0,\n          speed: getRandomInt(1, 3),\n          creativeFact: funFacts[factIdx]\n        };\n      }));\n      setLoading(false);\n    }).catch(() => {\n      setError('Failed to load asteroid data.');\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (gameOver) return;\n    intervalRef.current = setInterval(() => {\n      setAsteroids(asts => asts.map(a => ({\n        ...a,\n        y: a.y + a.speed\n      })));\n      setTimer(t => {\n        if (t <= 1) {\n          setGameOver(true);\n          clearInterval(intervalRef.current);\n          logAction('Asteroid Defense Game completed!');\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 500);\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver, logAction]);\n  useEffect(() => {\n    if (factQueue.length > 0 && !currentFact) {\n      setCurrentFact(factQueue[0]);\n      setFactQueue(fq => fq.slice(1));\n    }\n  }, [factQueue, currentFact]);\n\n  // Helper to test speech after user gesture\n  const handleTestSpeech = async () => {\n    setSpeechError(false);\n    setSpeechReady(true);\n    await speak('Speech synthesis is working! You will hear asteroid facts during the game.', err => setSpeechError(!!err), utterRef);\n  };\n  useEffect(() => {\n    if (currentFact && speechReady) {\n      // Only speak if user has enabled speech\n      setSpeechError(false); // Clear error before trying\n      speak(currentFact, err => {\n        if (err === true) setSpeechError(true);else setSpeechError(false); // Clear error if speech works\n      }, utterRef);\n      const timer = setTimeout(() => setCurrentFact(null), 2500);\n      return () => clearTimeout(timer);\n    }\n  }, [currentFact, speechReady]);\n\n  // Only speak game over once\n  const hasSpokenGameOver = useRef(false);\n  useEffect(() => {\n    if (gameOver && speechReady && !hasSpokenGameOver.current) {\n      hasSpokenGameOver.current = true;\n      speak('Game Over! Final Score: ' + score);\n      if (score > 0) awardBadge('asteroid-hunter');\n      logAction('Asteroid Defense Game completed!');\n    }\n    if (!gameOver) {\n      hasSpokenGameOver.current = false;\n    }\n  }, [gameOver, score, awardBadge, logAction, speechReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `asteroid-game${highContrast ? ' high-contrast' : ''}`,\n    \"aria-label\": \"Asteroid Defense Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asteroid Defense Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '1rem'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'salmon',\n        textAlign: 'center',\n        margin: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          zIndex: 20,\n          padding: '8px 18px',\n          background: '#23243a',\n          color: '#ffd700',\n          border: 'none',\n          borderRadius: 6,\n          cursor: 'pointer',\n          boxShadow: '0 2px 8px #0008'\n        },\n        onClick: handleTestSpeech,\n        \"aria-label\": \"Test Speech Synthesis\",\n        children: \"Test Speech\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        tabIndex: 0,\n        \"aria-label\": \"Game Area\",\n        children: asteroids.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"asteroid\",\n          style: {\n            left: `${a.x}%`,\n            top: `${a.y}%`\n          },\n          tabIndex: 0,\n          \"aria-label\": 'Asteroid ' + a.name,\n          onClick: () => {\n            setScore(s => s + 1);\n            setFactQueue(fq => [...fq, a.creativeFact]);\n            setAsteroids(asts => asts.filter(ast => ast.id !== a.id));\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter' || e.key === ' ') {\n              setScore(s => s + 1);\n              setFactQueue(fq => [...fq, a.creativeFact]);\n              setAsteroids(asts => asts.filter(ast => ast.id !== a.id));\n            }\n          },\n          children: \"\\uD83E\\uDEA8\"\n        }, a.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scoreboard\",\n        children: [\"Score: \", score, \" | Time Left: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), currentFact && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fact-toast\",\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          background: '#23243a',\n          color: '#ffd700',\n          padding: '12px 24px',\n          borderRadius: 8,\n          boxShadow: '0 2px 8px #0008',\n          zIndex: 10,\n          transition: 'opacity 0.5s'\n        },\n        children: currentFact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [\"Game Over! Final Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 24\n      }, this), speechError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 50,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          background: '#ffb347',\n          color: '#23243a',\n          padding: '10px 20px',\n          borderRadius: 8,\n          boxShadow: '0 2px 8px #0008',\n          zIndex: 11\n        },\n        children: \"Speech not supported or blocked. Please check your browser settings to enable audio narration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(AsteroidDefenseGame, \"VNsig7ax0y5zhyD5ZMjeA4xOaqQ=\", false, function () {\n  return [useUser, useHighContrast];\n});\n_c = AsteroidDefenseGame;\nexport default AsteroidDefenseGame;\nvar _c;\n$RefreshReg$(_c, \"AsteroidDefenseGame\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useUser","useHighContrast","jsxDEV","_jsxDEV","Fragment","_Fragment","GAME_DURATION","getRandomInt","min","max","Math","floor","random","getVoicesAsync","Promise","resolve","voices","window","speechSynthesis","getVoices","length","onvoiceschanged","loadedVoices","speak","text","onFail","utterRef","voice","find","v","lang","startsWith","utter","SpeechSynthesisUtterance","rate","onerror","onstart","current","__loggedVoices","console","log","e","AsteroidDefenseGame","_s","awardBadge","logAction","highContrast","asteroids","setAsteroids","score","setScore","gameOver","setGameOver","timer","setTimer","showFact","setShowFact","loading","setLoading","error","setError","factQueue","setFactQueue","currentFact","setCurrentFact","speechError","setSpeechError","speechReady","setSpeechReady","intervalRef","backendUrl","process","env","REACT_APP_BACKEND_URL","fetch","then","res","json","data","neos","Object","values","near_earth_objects","flat","slice","map","neo","_neo$estimated_diamet","_neo$estimated_diamet2","_neo$estimated_diamet3","_neo$close_approach_d","_neo$close_approach_d2","_neo$close_approach_d3","_neo$close_approach_d4","_neo$close_approach_d5","_neo$close_approach_d6","_neo$close_approach_d7","_neo$close_approach_d8","diameter","estimated_diameter","meters","estimated_diameter_max","toFixed","miss","close_approach_data","miss_distance","kilometers","split","approach","close_approach_date_full","close_approach_date","funFacts","name","factIdx","x","y","speed","creativeFact","catch","setInterval","asts","a","t","clearInterval","fq","handleTestSpeech","err","setTimeout","clearTimeout","hasSpokenGameOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","color","position","top","right","zIndex","padding","background","border","borderRadius","cursor","boxShadow","onClick","tabIndex","left","s","filter","ast","id","onKeyDown","key","transform","transition","_c","$RefreshReg$"],"sources":["C:/Users/prati/Desktop/NASA/frontend/src/AsteroidDefenseGame.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport './AsteroidDefenseGame.css';\r\nimport { useHighContrast } from './HighContrastContext';\r\n\r\n// Simple arcade-style asteroid defense game using real NEO data\r\nconst GAME_DURATION = 60; // seconds\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n// Voice narration for asteroid facts and game events\r\nfunction getVoicesAsync() {\r\n  return new Promise(resolve => {\r\n    const voices = window.speechSynthesis.getVoices();\r\n    if (voices.length) return resolve(voices);\r\n    window.speechSynthesis.onvoiceschanged = () => {\r\n      const loadedVoices = window.speechSynthesis.getVoices();\r\n      resolve(loadedVoices);\r\n    };\r\n  });\r\n}\r\n\r\nasync function speak(text, onFail, utterRef) {\r\n  if ('speechSynthesis' in window) {\r\n    try {\r\n      const voices = await getVoicesAsync();\r\n      if (!voices.length) {\r\n        if (onFail) onFail(true);\r\n        return;\r\n      }\r\n      const voice = voices.find(v => v.lang && v.lang.startsWith('en')) || voices[0];\r\n      const utter = new window.SpeechSynthesisUtterance(text);\r\n      if (voice) utter.voice = voice;\r\n      utter.rate = 1.25; // Set speech rate to 1.25x\r\n      utter.onerror = () => { if (onFail) onFail(true); };\r\n      utter.onstart = () => { if (onFail) onFail(false); };\r\n      if (utterRef) utterRef.current = utter;\r\n      window.speechSynthesis.speak(utter);\r\n      if (window.__loggedVoices !== true) {\r\n        console.log('Available voices:', voices);\r\n        window.__loggedVoices = true;\r\n      }\r\n    } catch (e) {\r\n      if (onFail) onFail(true);\r\n    }\r\n  } else {\r\n    if (onFail) onFail(true);\r\n  }\r\n}\r\n\r\nconst AsteroidDefenseGame = () => {\r\n  const { awardBadge, logAction } = useUser();\r\n  const { highContrast } = useHighContrast();\r\n  const [asteroids, setAsteroids] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [timer, setTimer] = useState(GAME_DURATION);\r\n  const [showFact, setShowFact] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [factQueue, setFactQueue] = useState([]); // queue for facts\r\n  const [currentFact, setCurrentFact] = useState(null); // currently displayed fact\r\n  const [speechError, setSpeechError] = useState(false);\r\n  const [speechReady, setSpeechReady] = useState(false); // tracks if user has enabled speech\r\n  const intervalRef = useRef();\r\n  const utterRef = useRef(); // add this near other refs\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000';\r\n    fetch(`${backendUrl}/api/neo?start_date=2025-06-18&end_date=2025-06-18`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const neos = Object.values(data.near_earth_objects || {}).flat();\r\n        setAsteroids(neos.slice(0, 10).map(neo => {\r\n          // Creative fact generation\r\n          const diameter = neo.estimated_diameter?.meters?.estimated_diameter_max?.toFixed(1);\r\n          const miss = neo.close_approach_data?.[0]?.miss_distance?.kilometers?.split('.')[0];\r\n          const approach = neo.close_approach_data?.[0]?.close_approach_date_full || neo.close_approach_data?.[0]?.close_approach_date;\r\n          const funFacts = [\r\n            `Asteroid ${neo.name} zooms by Earth at a distance of ${miss ? miss + ' km' : 'unknown distance'}!`,\r\n            `Did you know? ${neo.name} is about ${diameter ? diameter + ' meters' : 'unknown size'} wide!`,\r\n            `Watch out! ${neo.name} made a close approach on ${approach || 'an unknown date'}!`,\r\n            `Asteroid ${neo.name} is a true space traveler!`,\r\n            `You just blasted ${neo.name}!`];\r\n          const factIdx = Math.floor(Math.random() * funFacts.length);\r\n          return {\r\n            ...neo,\r\n            x: getRandomInt(10, 90),\r\n            y: 0,\r\n            speed: getRandomInt(1, 3),\r\n            creativeFact: funFacts[factIdx],\r\n          };\r\n        }));\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setError('Failed to load asteroid data.');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (gameOver) return;\r\n    intervalRef.current = setInterval(() => {\r\n      setAsteroids(asts => asts.map(a => ({ ...a, y: a.y + a.speed })));\r\n      setTimer(t => {\r\n        if (t <= 1) {\r\n          setGameOver(true);\r\n          clearInterval(intervalRef.current);\r\n          logAction('Asteroid Defense Game completed!');\r\n          return 0;\r\n        }\r\n        return t - 1;\r\n      });\r\n    }, 500);\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [gameOver, logAction]);\r\n\r\n  useEffect(() => {\r\n    if (factQueue.length > 0 && !currentFact) {\r\n      setCurrentFact(factQueue[0]);\r\n      setFactQueue(fq => fq.slice(1));\r\n    }\r\n  }, [factQueue, currentFact]);\r\n\r\n  // Helper to test speech after user gesture\r\n  const handleTestSpeech = async () => {\r\n    setSpeechError(false);\r\n    setSpeechReady(true);\r\n    await speak(\r\n      'Speech synthesis is working! You will hear asteroid facts during the game.',\r\n      (err) => setSpeechError(!!err),\r\n      utterRef\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentFact && speechReady) { // Only speak if user has enabled speech\r\n      setSpeechError(false); // Clear error before trying\r\n      speak(currentFact, (err) => {\r\n        if (err === true) setSpeechError(true);\r\n        else setSpeechError(false); // Clear error if speech works\r\n      }, utterRef);\r\n      const timer = setTimeout(() => setCurrentFact(null), 2500);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentFact, speechReady]);\r\n\r\n  // Only speak game over once\r\n  const hasSpokenGameOver = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (gameOver && speechReady && !hasSpokenGameOver.current) {\r\n      hasSpokenGameOver.current = true;\r\n      speak('Game Over! Final Score: ' + score);\r\n      if (score > 0) awardBadge('asteroid-hunter');\r\n      logAction('Asteroid Defense Game completed!');\r\n    }\r\n    if (!gameOver) {\r\n      hasSpokenGameOver.current = false;\r\n    }\r\n  }, [gameOver, score, awardBadge, logAction, speechReady]);\r\n\r\n  return (\r\n    <div className={`asteroid-game${highContrast ? ' high-contrast' : ''}`} aria-label=\"Asteroid Defense Game\">\r\n      <h2>Asteroid Defense Game</h2>\r\n      {loading && <div style={{ textAlign: 'center', margin: '1rem' }}>Loading...</div>}\r\n      {error && <div style={{ color: 'salmon', textAlign: 'center', margin: '1rem' }}>{error}</div>}\r\n      {!loading && !error && (\r\n        <>\r\n          <button\r\n            style={{position:'absolute',top:10,right:10,zIndex:20,padding:'8px 18px',background:'#23243a',color:'#ffd700',border:'none',borderRadius:6,cursor:'pointer',boxShadow:'0 2px 8px #0008'}}\r\n            onClick={handleTestSpeech}\r\n            aria-label=\"Test Speech Synthesis\"\r\n          >\r\n            Test Speech\r\n          </button>\r\n          <div className=\"game-area\" tabIndex={0} aria-label=\"Game Area\">\r\n            {asteroids.map((a) => (\r\n              <div\r\n                key={a.id}\r\n                className=\"asteroid\"\r\n                style={{ left: `${a.x}%`, top: `${a.y}%` }}\r\n                tabIndex={0}\r\n                aria-label={'Asteroid ' + a.name}\r\n                onClick={() => {\r\n                  setScore(s => s + 1);\r\n                  setFactQueue(fq => [...fq, a.creativeFact]);\r\n                  setAsteroids(asts => asts.filter(ast => ast.id !== a.id));\r\n                }}\r\n                onKeyDown={e => {\r\n                  if (e.key === 'Enter' || e.key === ' ') {\r\n                    setScore(s => s + 1);\r\n                    setFactQueue(fq => [...fq, a.creativeFact]);\r\n                    setAsteroids(asts => asts.filter(ast => ast.id !== a.id));\r\n                  }\r\n                }}\r\n              >\r\n                🪨\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"scoreboard\">\r\n            Score: {score} | Time Left: {timer}s\r\n          </div>\r\n          {currentFact && (\r\n            <div className=\"fact-toast\" style={{position:'absolute',top:10,left:'50%',transform:'translateX(-50%)',background:'#23243a',color:'#ffd700',padding:'12px 24px',borderRadius:8,boxShadow:'0 2px 8px #0008',zIndex:10,transition:'opacity 0.5s'}}>\r\n              {currentFact}\r\n            </div>\r\n          )}\r\n          {gameOver && <div className=\"game-over\">Game Over! Final Score: {score}</div>}\r\n          {speechError && (\r\n            <div style={{position:'absolute',top:50,left:'50%',transform:'translateX(-50%)',background:'#ffb347',color:'#23243a',padding:'10px 20px',borderRadius:8,boxShadow:'0 2px 8px #0008',zIndex:11}}>\r\n              Speech not supported or blocked. Please check your browser settings to enable audio narration.\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AsteroidDefenseGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}